<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/jee
		http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/tx
   	    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.1.xsd">


	<!--EXPLICIT SUPPORT FOR JSON, XML PARSING, JSR-303 VALIDATION, NUMBER FORMAT 
		SUPPORT -->
	<mvc:annotation-driven />
	
	 <mvc:default-servlet-handler />


	<!--DECLARATIVE TRANSACTIONAL SUPPORT -->
	<tx:annotation-driven transaction-manager="transactionManager"/>


	<!--ENABLES DETECTION FOR STEREOTYPE COMPONENTS AS WELL AS ONES SUPPORTED 
		BY ANNOTATION-CONFIG -->
	<context:component-scan base-package="com.demo.oauth2.app.controller" />
	<context:component-scan base-package="com.demo.oauth2.app.service" />
	<context:component-scan base-package="com.demo.oauth2.app.dao" />
	<context:component-scan base-package="com.demo.oauth2.app.exception" />
	
	

	<!--HIBERNATE UTIL PROPERTIES -->
	<util:properties id="hibernateProperties">
		<prop key="hibernate.dialect">
			org.hibernate.dialect.MySQL5InnoDBDialect
		</prop>
		<prop key="hibernate.show_sql">true</prop>
	</util:properties>


	<!--SESSION FACTORY DECLARATION -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource" p:packagesToScan="com.demo.oauth2.app.model"
		p:hibernateProperties-ref="hibernateProperties" />


	<!--TRANSACTION MANAGER DECLARATION -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />

	<!--PROPERTY PLACE HOLDER CONFIGURER IS USED TO EXTERNALIZE STRING PROPERTIES 
		AVAILABLE TO SPRING APPLICATION CONTEXT TO INJECT VALUES -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		p:location="classpath:spring.properties" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${datasource.driver.class}"
		p:url="${datasource.url}" p:username="${datasource.username}"
		p:password="${datasource.password}" />

	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
	p:prefix="/WEB-INF/view/"
	p:suffix=".jsp" />
</beans>